syntax = "proto3";

option csharp_namespace = "RaceServer";

package race;

service GameService {
	rpc RoomStream (RoomStreamRequest) returns (stream RoomStreamResponse);
	rpc JoinRoom (JoinRoomRequest) returns (JoinRoomResponse);
	rpc PlayerReady (PlayerReadyRequest) returns (PlayerReadyResponse);
	rpc StartMatch (StartMatchRequest) returns (StartMatchResponse);
	rpc UpdateSeeds (UpdateSeedsRequest) returns (UpdateSeedsResponse);
	rpc EndGame (EndGameRequest) returns (EndGameResponse);
	rpc EndMatch (EndMatchRequest) returns (EndMatchResponse);
}



message RoomUser {
	string name = 1;
	string role = 2;
	bool host = 3;
	bool ready = 4;
	int seed = 5;
}



message RoomStreamRequest {
	string name = 1;
	string role = 2;
	bool host = 3;
}

message RoomStreamResponse {
	oneof message {
		JoinRoomNotification join_room_notification = 1;
		PlayerReadyNotification player_ready_notification = 2;
		StartMatchNotification start_match_notification = 3;
		UpdateSeedsNotification update_seeds_notification = 4;
		EndGameNotification end_game_notification = 5;
		EndMatchNotification end_match_notification = 6;
	}
}



message JoinRoomRequest {
	string name = 1;
	string role = 2;
}

message JoinRoomResponse {
	string name = 1;
	string role = 2;
	bool host = 3;
	bool ready = 4;
}

message JoinRoomNotification {
	repeated RoomUser users = 1;
	bool all_ready = 2;
}



message PlayerReadyRequest {
	string name = 1;
}

message PlayerReadyResponse {
	bool ready = 1;
}

message PlayerReadyNotification {
	repeated RoomUser users = 1;
	bool all_ready = 2;
}



message StartMatchRequest {
	string name = 1;
}

message StartMatchResponse {
	
}

message StartMatchNotification {
	bool match_started = 1;
}



message UpdateSeedsRequest {
	
}

message UpdateSeedsResponse {
	
}

message UpdateSeedsNotification {
	
}



message EndGameRequest {
	
}

message EndGameResponse {
	
}

message EndGameNotification {
	
}



message EndMatchRequest {
	
}

message EndMatchResponse {
	
}

message EndMatchNotification {
	
}